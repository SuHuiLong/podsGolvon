//
//  InterviewViewController.m
//  FindModule
//
//  Created by apple on 2016/12/1.
//  Copyright © 2016年 apple. All rights reserved.
//

#import "InterviewViewController.h"
#import "InterviewTableViewCell.h"
#import "ChildInterviewModel.h"
#import "InterviewDetileViewController.h"

@interface InterviewViewController ()<UITableViewDelegate,UITableViewDataSource,LikeDelegate>

@property (nonatomic, strong) UITableView   *tableview;
@property (nonatomic, strong) NSMutableArray   *interViewDataArr;
@property (nonatomic, strong) DownLoadDataSource   *loadDataManager;
@property (nonatomic, assign) NSInteger viewStr;
@property (nonatomic, assign) NSInteger currentPage;
@property (nonatomic, assign) NSInteger allPage;
@property (nonatomic, assign) NSInteger currentRow;

@property (nonatomic, strong) MBProgressHUD   *HUD;
@property (nonatomic, strong) UIView   *placeView;


@end

static NSString *cellID = @"InterviewTableViewCell";

@implementation InterviewViewController
-(NSMutableArray *)interViewDataArr{
    if (!_interViewDataArr) {
        _interViewDataArr = [NSMutableArray array];
    }
    return _interViewDataArr;
}
-(DownLoadDataSource *)loadDataManager{
    if (!_loadDataManager) {
        _loadDataManager = [[DownLoadDataSource alloc] init];
    }
    return _loadDataManager;
}
-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleDefault animated:NO];

}
- (void)viewDidLoad {
    [super viewDidLoad];
    self.automaticallyAdjustsScrollViewInsets = NO;
    _viewStr = 0;
    _currentPage = 0;
    _currentRow = 0;
    _allPage = 0;
    [self requesInterviewData];
    [self createUI];

}

#pragma mark ---- UI
-(void)createUI{
    
    _tableview = [[UITableView alloc] initWithFrame:CGRectMake(0, 102, ScreenWidth, ScreenHeight - 102 -49)];
    _tableview.rowHeight = kHvertical(257);
    [_tableview setDelegate:self];
    [_tableview setDataSource:self];
    _tableview.separatorStyle = NO;
    [_tableview registerClass:[InterviewTableViewCell class] forCellReuseIdentifier:cellID];
    [self.view addSubview:_tableview];
    
    
    MJRefreshBackNormalFooter *refreshFooter = [MJRefreshBackNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(interviewDataFooterRefresh)];
    self.tableview.mj_footer = refreshFooter;
    
    MJRefreshNormalHeader *refreshHeader = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(requesInterviewData)];
    self.tableview.mj_header = refreshHeader;

}
-(void)createProgress{
    
    _placeView = [[UIView alloc] init];
    _placeView.backgroundColor = [UIColor whiteColor];
    _placeView.frame = CGRectMake(0, 64, ScreenWidth, ScreenHeight-64-49);
    [self.view addSubview:_placeView];
    
    _HUD = [MBProgressHUD showHUDAddedTo:_placeView animated:YES];
    _HUD.alpha = 0.5;
    _HUD.mode = MBProgressHUDModeIndeterminate;
    
}
#pragma mark ---- loadData
-(void)requesInterviewData{
    if (_interViewDataArr.count>0) {
        _HUD = nil;
        [_placeView removeFromSuperview];
    }else{
        [self createProgress];
    }
    NSDictionary *parameters = @{@"page":@(0),
                                 @"type":_type,
                                 @"uid":userDefaultUid};

    [self.loadDataManager downloadWithUrl:[NSString stringWithFormat:@"%@cao/findapi.php?findkey=gettypeall",urlHeader120] parameters:parameters complicate:^(BOOL success, id data) {
        [self.tableview.mj_header endRefreshing];
        if (success) {
            [self.interViewDataArr removeAllObjects];
            NSArray *tempArr = data[@"data"];
            _allPage = [data[@"pagenum"] integerValue];
            
            for (NSDictionary *tempDic in tempArr) {
                ChildInterviewModel *model = [ChildInterviewModel modelWithDictionary:tempDic];
                _viewStr = [model.readnum integerValue];
                [self.interViewDataArr addObject:model];
            }
            [self.tableview reloadData];
        }
    }];
}
-(void)interviewDataFooterRefresh{
    _currentPage++;
    if (_currentPage>_allPage) {
        _currentPage--;
        [self.tableview.mj_footer endRefreshingWithNoMoreData];
        return;
    }
    NSDictionary *parameters = @{@"page":@(_currentPage),
                                 @"type":_type,
                                 @"uid":userDefaultUid};
    
    [self.loadDataManager downloadWithUrl:[NSString stringWithFormat:@"%@cao/findapi.php?findkey=gettypeall",urlHeader120] parameters:parameters complicate:^(BOOL success, id data) {
        [self.tableview.mj_footer endRefreshing];
        if (success) {
            NSArray *tempArr = data[@"data"];            
            for (NSDictionary *tempDic in tempArr) {
                ChildInterviewModel *model = [ChildInterviewModel modelWithDictionary:tempDic];
                _viewStr = [model.readnum integerValue];
                [self.interViewDataArr addObject:model];
            }
            [self.tableview reloadData];
        }
    }];

}
#pragma mark ---- UITableViewDelegate && UITableViewDataSource
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    return self.interViewDataArr.count;
    
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    InterviewTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellID forIndexPath:indexPath];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    [cell relayoutInterviewDataWithModel:self.interViewDataArr[indexPath.row]];
    return cell;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    ChildInterviewModel *model = self.interViewDataArr[indexPath.row];
    InterviewDetileViewController *VC = [[InterviewDetileViewController alloc] init];
    VC.hidesBottomBarWhenPushed = YES;
    VC.titleStr = model.describe;
    VC.addTimeStr = model.time;
    VC.readStr = model.readnum;
    VC.likeStr = model.clikenum;
    VC.ID = model.vid;
    VC.type = self.type;
    VC.htmlStr = model.url;
    VC.isLike = model.likestatr;
    VC.likeDelegate = self;
    __weak typeof(self) weakself = self;
    [VC setBlock:^(BOOL isView) {
        weakself.viewStr = [model.readnum integerValue];
        weakself.viewStr ++;
        model.readnum = [NSString stringWithFormat:@"%ld",(long)_viewStr];
        [weakself.tableview reloadData];
    }];
    _currentRow = indexPath.row;
    [self.navigationController pushViewController:VC animated:YES];
    
}
-(void)likeBtnSelected:(BOOL)isSelected withLikeNum:(NSString *)likenum{
    ChildInterviewModel *model = self.interViewDataArr[_currentRow];
    model.clikenum = likenum;
    model.likestatr = isSelected;
    [self.tableview reloadRow:_currentRow inSection:0 withRowAnimation:UITableViewRowAnimationNone];
}
@end
